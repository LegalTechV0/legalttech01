---
- name: Fully deploy vaultra.ai with SSL
  hosts: all
  become: true

  tasks:
    - name: Install required packages (Nginx + Certbot)
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - nginx
        - certbot
        - python3-certbot-nginx
        - acl  # for setfacl permissions if needed

    - name: Create web root directory
      file:
        path: /var/www/vaultra.ai/html
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'
        recurse: yes

    - name: Copy index.html from /tmp
      copy:
        src: /tmp/index.html
        dest: /var/www/vaultra.ai/html/index.html
        owner: www-data
        group: www-data
        mode: '0644'
        remote_src: yes

    - name: Copy buy.html from /tmp
      copy:
        src: /tmp/buy.html
        dest: /var/www/vaultra.ai/html/buy.html
        owner: www-data
        group: www-data
        mode: '0644'
        remote_src: yes


    - name: Copy feature images from /tmp/src_img
      copy:
        src: /tmp/src_img/
        dest: /var/www/vaultra.ai/html/src_img/
        owner: www-data
        group: www-data
        mode: preserve
        remote_src: yes

    - name: Ensure images have correct permissions
      file:
        path: /var/www/vaultra.ai/html/src_img
        state: directory
        recurse: yes
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Set permissions for individual image files
      shell: |
        find /var/www/vaultra.ai/html/src_img -type f -exec chmod 644 {} \;
        find /var/www/vaultra.ai/html/src_img -type f -exec chown www-data:www-data {} \;
      args:
        executable: /bin/bash

    - name: Create Nginx config for vaultra.ai
      copy:
        dest: /etc/nginx/sites-available/vaultra.ai
        content: |
          server {
              listen 80;
              server_name vaultra.ai;

              root /var/www/vaultra.ai/html;
              index index.html;

              location / {
                  try_files $uri $uri.html $uri/ =404;
              }
          }

    - name: Enable vaultra.ai site
      file:
        src: /etc/nginx/sites-available/vaultra.ai
        dest: /etc/nginx/sites-enabled/vaultra.ai
        state: link
        force: yes

    - name: Remove default Nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Test Nginx configuration
      command: nginx -t
      register: nginx_test
      changed_when: false

    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded

    - name: Obtain SSL certificate from Let's Encrypt
      command: >
        certbot --nginx --non-interactive --agree-tos --redirect
        --email admin@vaultra.ai -d vaultra.ai
      register: certbot_output
      changed_when: "'Congratulations' in certbot_output.stdout or 'already exists' in certbot_output.stdout"

    - name: Final Nginx reload
      service:
        name: nginx
        state: reloaded
